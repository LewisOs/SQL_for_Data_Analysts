{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;\red11\green11\blue11;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c4314\c4314\c4314;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12800\viewh27940\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 SELECT *\
FROM orders\
JOIN accounts\
ON orders.account_id = accounts.id;\
____\
\
SELECT *\
FROM accounts\
JOIN orders\
ON accounts.id = orders.account_id;\
____\
\
SELECT orders.standard_qty, orders.gloss_qty, orders.poster_qty, accounts.website, accounts.primary_poc\
FROM orders\
JOIN accounts\
ON orders.account_id = accounts.id;\
____\
\
SELECT web_events.*\
FROM web_events\
JOIN accounts ON web_events.account_id = accounts.id\
WHERE accounts.name = 'Walmart\'92;\
____\
\
SELECT region.name region, sales_reps.name rep, accounts.name account\
FROM region\
JOIN sales_reps ON region.id = sales_reps.region_id\
JOIN accounts ON sales_reps.id = accounts.sales_rep_id\
ORDER BY accounts.name;\
____\
\
SELECT region.name AS region_name, accounts.name AS account_name, orders.total_amt_usd / (orders.total + 0.01) AS unit_price\
FROM orders\
JOIN accounts ON orders.account_id = accounts.id\
JOIN sales_reps ON accounts.sales_rep_id = sales_reps.id\
JOIN region ON sales_reps.region_id = region.id;\
____\
\
SELECT region.id AS region_name, accounts.name AS account_name, orders.total_amt_usd / (orders.total +0.01) AS unit_price\
FROM orders\
JOIN accounts ON orders.account_id = accounts.id\
JOIN sales_reps ON accounts.sales_rep_id = sales_reps.id\
JOIN region ON sales_reps.region_id = region.id\
WHERE orders.standard_qty > 100 AND orders.poster_qty > 50\
ORDER BY unit_price;\
____\
\
SELECT region.id AS region_name, accounts.name AS account_name, orders.total_amt_usd / (orders.total +0.01) AS unit_price\
FROM orders\
JOIN accounts ON orders.account_id = accounts.id\
JOIN sales_reps ON accounts.sales_rep_id = sales_reps.id\
JOIN region ON sales_reps.region_id = region.id\
WHERE orders.standard_qty > 100 AND orders.poster_qty > 50\
ORDER BY unit_price DESC;\
____\
\
SELECT DISTINCT accounts.name AS account_name, web_events.channel AS channels\
FROM accounts\
JOIN web_events ON accounts.id = web_events.account_id\
WHERE accounts.id = 1001;\
____\
\
SELECT orders.occurred_at, orders.total, orders.total_amt_usd, accounts.name\
FROM orders\
JOIN accounts ON orders.account_id = accounts.id\
WHERE orders.occurred_at BETWEEN '01-01-2015' AND '01-01-2016';\
____\
\
SELECT SUM(poster_qty)\
FROM orders;\
____\
\
SELECT SUM(standard_qty)\
FROM orders;\
____\
\
SELECT SUM(total_amt_usd)\
FROM orders;\
____\
\
SELECT id, standard_amt_usd + gloss_amt_usd AS standard_gloss_amt_usd\
FROM orders;\
____\
\
SELECT SUM(standard_amt_usd) / SUM(standard_qty) AS amt_usd_per_standard_unit\
FROM orders;\
____\
\
SELECT MIN(occurred_at)\
FROM orders; \
____\
\
SELECT occurred_at\
FROM orders\
ORDER BY occurred_at ASC\
LIMIT 1; \
____\
\
SELECT MAX(occurred_at)\
FROM web_events;\
___\
\
SELECT occurred_at\
FROM web_events\
ORDER BY occurred_at DESC\
LIMIT 1; \
____\
\
SELECT AVG(standard_amt_usd) AS standard_amt_mean, AVG(gloss_amt_usd) AS gloss_amt_mean, AVG(poster_amt_usd) AS poster_amt_mean, AVG(standard_qty) AS standard_qty_mean, AVG(gloss_qty) AS gloss_qty_mean, AVG(poster_qty) AS poster_qty_mean\
FROM orders;\
____\
\
SELECT * \
FROM (SELECT total_amt_usd\
	FROM orders\
	ORDER BY total_amt_usd\
	LIMIT 3457) AS Table1\
ORDER BY total_amt_usd DESC\
LIMIT 2;\
____\
\
SELECT accounts.name AS account_name, orders.occurred_at AS date\
FROM orders\
JOIN accounts ON orders.account_id = accounts.id\
ORDER BY date ASC\
LIMIT 1;\
____\
\
SELECT accounts.name AS account_name, SUM(orders.total_amt_usd) as total_sales\
FROM orders\
JOIN accounts ON orders.account_id = accounts.id\
GROUP BY account_name;\
____\
\
SELECT orders.occurred_at AS date, web_events.channel AS channel, accounts.name AS account_name\
FROM orders\
JOIN accounts ON orders.account_id = accounts.id\
JOIN web_events ON accounts.id = web_events.account_id\
ORDER BY date DESC\
LIMIT 1;\
____\
\
SELECT web_events.channel as channel, COUNT(web_events.channel) AS uses\
FROM web_events\
GROUP BY channel;\
____\
\
SELECT accounts.primary_poc AS primary_contact\
FROM accounts\
JOIN web_events ON accounts.id = web_events.account_id\
ORDER BY web_events.occurred_at DESC\
LIMIT 1;\
____\
\
SELECT MIN(orders.total_amt_usd) AS smallest_order_amt, accounts.name AS name\
FROM orders\
JOIN accounts ON orders.account_id = accounts.id\
GROUP BY name;\
____\
\
SELECT COUNT(sales_reps.id) AS num_reps, region.name AS region_name\
FROM sales_reps\
JOIN region ON sales_reps.region_id = region.id\
GROUP BY region_name\
ORDER BY num_reps ASC;\
____\
\
SELECT accounts.name AS name, AVG(orders.standard_qty) AS standard_avg_qty, AVG(orders.gloss_qty) AS gloss_avg_qty, AVG(orders.poster_qty) AS poster_avg_qty\
FROM orders\
JOIN accounts ON orders.account_id = accounts.id\
GROUP BY name\
____\
\
SELECT accounts.name AS name, AVG(orders.standard_amt_usd) AS standard_amt_avg, AVG(orders.gloss_amt_usd) AS gloss_amt_avg, AVG(orders.poster_amt_usd) AS poster_amt_avg\
FROM orders\
JOIN accounts ON orders.account_id = accounts.id\
GROUP BY name\
____\
\
SELECT sales_reps.name AS rep_name, web_events.channel AS channel_type, COUNT(web_events.channel) AS n_uses\
FROM web_events\
JOIN accounts ON web_events.account_id = accounts.id\
JOIN sales_reps ON accounts.sales_rep_id = sales_reps.id\
GROUP BY rep_name, channel_type\
ORDER BY n_uses DESC;\
____\
\
SELECT region.name, web_events.channel, COUNT(*) AS num_events\
FROM accounts\
JOIN web_events ON accounts.id = web_events.account_id\
JOIN sales_reps ON sales_reps.id = accounts.sales_rep_id\
JOIN region ON sales_reps.region_id = region.id\
GROUP BY region.name, web_events.channel\
ORDER BY num_events DESC;\
____\
\
SELECT DISTINCT accounts.name AS account_name, region.name AS region_name\
FROM accounts\
JOIN sales_reps ON accounts.sales_rep_id = sales_reps.id\
JOIN region ON sales_reps.region_id = region.id;\
____\
\
SELECT DISTINCT accounts.name AS account_name, sales_reps.name AS rep_name\
FROM accounts\
JOIN sales_reps ON accounts.sales_rep_id = sales_reps.id\
ORDER BY rep_name;\
____\
\
SELECT sales_reps.name, sales_reps.id, COUNT(*) AS num_accounts\
FROM sales_reps\
JOIN accounts ON sales_reps.id = accounts.sales_rep_id\
GROUP BY sales_reps.name, sales_reps.id\
HAVING COUNT(*) > 5\
ORDER BY num_accounts\
____\
\
SELECT accounts.id, accounts.name, COUNT(*) AS num_orders\
FROM accounts\
JOIN orders ON accounts.id = orders.account_id\
GROUP BY accounts.id, accounts.name\
HAVING COUNT(*) > 20\
ORDER BY accounts.name;\
____\
\
SELECT accounts.id, accounts.name, COUNT(*) AS num_orders\
FROM accounts\
JOIN orders ON accounts.id = orders.account_id\
GROUP BY accounts.id, accounts.name\
HAVING COUNT(*) > 20\
ORDER BY COUNT(*) DESC\
LIMIT 1;\
____\
\
SELECT accounts.id, accounts.name, SUM(total_amt_usd) AS total_spend\
FROM accounts\
JOIN orders ON accounts.id = orders.account_id\
GROUP BY accounts.id, accounts.name\
HAVING SUM(total_amt_usd) > 30000;\
____\
\
SELECT accounts.id, accounts.name, SUM(total_amt_usd) AS total_spend\
FROM accounts\
JOIN orders ON accounts.id = orders.account_id\
GROUP BY accounts.id, accounts.name\
HAVING SUM(total_amt_usd) < 1000;\
____\
\
SELECT accounts.id, accounts.name, SUM(total_amt_usd) AS total_spend\
FROM accounts\
JOIN orders ON accounts.id = orders.account_id\
GROUP BY accounts.id, accounts.name\
ORDER BY SUM(total_amt_usd) DESC\
LIMIT 1;\
____\
\
SELECT accounts.id, accounts.name, SUM(total_amt_usd) AS total_spend\
FROM accounts\
JOIN orders ON accounts.id = orders.account_id\
GROUP BY accounts.id, accounts.name\
ORDER BY SUM(total_amt_usd) ASC\
LIMIT 1;\
____\
\
SELECT accounts.id, accounts.name, web_events.channel, COUNT(*)\
FROM accounts\
JOIN web_events ON accounts.id = web_events.account_id\
GROUP BY accounts.id, accounts.name, web_events.channel\
HAVING COUNT(*) > 6 AND web_events.channel = 'facebook';\
____\
\
SELECT accounts.id, accounts.name, web_events.channel, COUNT(*)\
FROM accounts\
JOIN web_events ON accounts.id = web_events.account_id\
GROUP BY accounts.id, accounts.name, web_events.channel\
HAVING COUNT(*) > 6 AND web_events.channel = 'facebook'\
ORDER BY COUNT(*) DESC\
LIMIT 1;\
____\
\
SELECT accounts.id, accounts.name, web_events.channel, COUNT(*)\
FROM accounts\
JOIN web_events ON accounts.id = web_events.account_id\
GROUP BY accounts.id, accounts.name, web_events.channel\
ORDER BY COUNT(*) DESC\
LIMIT 1;\
____\
\
SELECT SUM(total_amt_usd) AS total_sales, DATE_TRUNC('year', occurred_at) as year\
FROM orders\
GROUP BY year;\
____\
\
SELECT DATE_PART('month', occurred_at) AS month, SUM(total_amt_usd) AS total_sales\
FROM orders\
GROUP BY month\
ORDER BY month;\
____\
\
SELECT DATE_PART('year', occurred_at) AS year, COUNT(*) AS num_orders\
FROM orders\
WHERE DATE_PART('year', occurred_at) BETWEEN 2014 AND 2017\
GROUP BY year;\
____\
\
SELECT DATE_PART('month', occurred_at) AS month, COUNT(*) AS num_orders\
FROM orders\
WHERE occurred_at BETWEEN '2014-01-01' AND '2017-01-01'\
GROUP BY month\
ORDER BY month;\
____\
\
SELECT DATE_PART('year', orders.occurred_at) AS ord_year, DATE_PART('month', orders.occurred_at) AS ord_month, SUM(orders.gloss_amt_usd), accounts.name\
FROM orders\
JOIN accounts ON orders.account_id = accounts.id\
WHERE accounts.name = 'Walmart'\
GROUP BY ord_year, ord_month, accounts.name\
ORDER BY sum DESC\
LIMIT 1;\
____\
\
SELECT account_id, total_amt_usd,\
CASE WHEN total_amt_usd > 3000 THEN 'Large' \
ELSE 'Small' END AS order_size\
FROM orders;\
____\
\
SELECT COUNT(*) AS num_orders,\
CASE WHEN total_amt_usd >= 2000 THEN 'At Least 2000' \
	WHEN total_amt_usd >= 1000 THEN 'Between 1000 and 2000'\
ELSE 'Less than 1000' END AS order_size\
FROM orders\
GROUP BY order_size;\
____\
\
SELECT SUM(orders.total_amt_usd) AS total_sales, accounts.name,\
CASE WHEN SUM(orders.total_amt_usd) >= 200000 THEN 'greater than 200,000' \
	WHEN SUM(orders.total_amt_usd) >= 100000 THEN '200,000 and 100,000'\
ELSE 'under 100,000' END AS level\
FROM orders\
JOIN accounts ON orders.account_id = accounts.id\
GROUP BY accounts.name\
ORDER BY total_sales DESC;\
____\
\
SELECT account_id, total_amt_usd,\
CASE WHEN total_amt_usd > 3000 THEN 'Large' \
ELSE 'Small' END AS order_size\
FROM orders\
WHERE DATE_PART('year', occurred_at) BETWEEN 2016 AND 2017\
ORDER BY total_amt_usd DESC;\
____\
\
SELECT sales_reps.name AS rep_name, COUNT(orders.*) AS num_orders, \
CASE WHEN COUNT(orders.*) > 200 THEN 'top'\
	ELSE 'not' END\
FROM sales_reps\
JOIN accounts ON sales_reps.id = accounts.sales_rep_id\
JOIN orders ON accounts.id = orders.account_id\
GROUP BY rep_name\
ORDER BY num_orders DESC;\
____\
\
SELECT sales_reps.name AS rep_name, COUNT(orders.*) AS num_orders, SUM(orders.total_amt_usd) AS total_sales_amt,\
CASE WHEN COUNT(orders.*) > 200 OR SUM(orders.total_amt_usd) > 750000 THEN 'top'\
	WHEN COUNT(orders.*) > 150 OR SUM(orders.total_amt_usd) > 500000 THEN 'middle'\
	ELSE 'not' END\
FROM sales_reps\
JOIN accounts ON sales_reps.id = accounts.sales_rep_id\
JOIN orders ON accounts.id = orders.account_id\
GROUP BY rep_name\
ORDER BY total_sales_amt DESC;\
____\
\
SELECT AVG(num_events) AS avg_events_per_day, channel\
FROM (\
  	SELECT COUNT(*) AS num_events, DATE_TRUNC('day', occurred_at) AS day, channel\
	FROM web_events\
	GROUP BY day, channel\
	ORDER BY num_events DESC\
     ) AS table1\
GROUP BY channel\
____\
\
SELECT AVG(standard_qty) AS std, AVG(gloss_qty) AS gloss, AVG(poster_qty) AS poster\
FROM orders\
WHERE DATE_TRUNC('month', occurred_at) =\
    (SELECT DATE_TRUNC('month', occurred_at)\
	FROM orders\
	ORDER BY 1 ASC\
	LIMIT 1)\
____\
\
SELECT temp3.rep_name, temp3.region_name, temp3.total_amt\
FROM (\
	SELECT region_name, MAX(total_amt) AS total_amt\
	FROM (\
		SELECT sales_reps.name AS rep_name, region.name AS region_name, SUM(orders.total_amt_usd) AS total_amt\
		FROM sales_reps\
		JOIN accounts ON sales_reps.id = accounts.sales_rep_id\
		JOIN orders ON accounts.id = orders.account_id\
		JOIN region ON sales_reps.region_id = region.id\
		GROUP BY rep_name, region_name) AS temp1\
	GROUP BY region_name) AS temp2\
JOIN (\
	SELECT sales_reps.name AS rep_name, region.name AS region_name, SUM(orders.total_amt_usd) AS total_amt\
  	FROM sales_reps\
  	JOIN accounts ON sales_reps.id = accounts.sales_rep_id\
  	JOIN orders ON accounts.id = orders.account_id\
	JOIN region ON sales_reps.region_id = region.id\
  	GROUP BY rep_name, region_name) AS temp3\
ON temp3.region_name = temp2.region_name AND temp3.total_amt = temp2.total_amt\
____\
\
SELECT region.name AS region_name, COUNT(orders.*)\
FROM region\
JOIN sales_reps ON region.id = sales_reps.region_id\
JOIN accounts ON sales_reps.id = accounts.sales_rep_id\
JOIN orders ON accounts.id = orders.account_id\
WHERE region.name = (\
	SELECT region.name AS region_name\
	FROM region\
	JOIN sales_reps ON region.id = sales_reps.region_id\
	JOIN accounts ON sales_reps.id = accounts.sales_rep_id\
	JOIN orders ON accounts.id = orders.account_id\
	GROUP BY region_name\
	ORDER BY SUM(orders.total_amt_usd) DESC\
	LIMIT 1)\
GROUP BY region.name\
____\
\
SELECT COUNT(*)\
FROM (\
  SELECT accounts.name\
  FROM accounts\
  JOIN orders ON accounts.id = orders.account_id\
  GROUP BY accounts.name\
  HAVING SUM(orders.total) > (\
    SELECT total\
  	FROM (\
      SELECT accounts.name, SUM(orders.total) AS total\
      FROM accounts\
      JOIN orders ON accounts.id = orders.account_id\
      GROUP BY accounts.name\
      ORDER BY SUM(orders.standard_qty) DESC\
      LIMIT 1) AS most_standard)\
  	) AS counter_tab;\
____\
\
SELECT channel, COUNT(*), accounts.name\
FROM web_events\
JOIN accounts ON web_events.account_id = accounts.id\
WHERE accounts.name =\
    (SELECT accounts.name\
    FROM accounts\
    JOIN orders ON accounts.id = orders.account_id\
    GROUP BY accounts.name\
    ORDER BY sum(orders.total_amt_usd) DESC\
    LIMIT 1)\
GROUP BY channel, accounts.name\
____\
\
Next is Q5 - 
\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
What is the lifetime average amount spent in terms of 
\f1\b total_amt_usd
\f0\b0  for the top 10 total spending 
\f1\b accounts
\f0\b0 ?
\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
\
\
}